# Plot Types in Matplotlib

Matplotlib offers a variety of plot types suitable for different purposes. In this chapter, we introduce the most important plot types and explain their use cases.

## 1. Line plots (`plt.plot()`)
Line plots are excellent for visualizing trends over time.

```{python}
import matplotlib.pyplot as plt
import numpy as np

t = np.linspace(0, 10, 100)
y = np.sin(t)

plt.plot(t, y, label='sin(t)', color='b')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude')
plt.title('Line plot')
plt.legend()
plt.show()
```

## 2. Scatter Plots (`plt.scatter()`)
Scatter plots are used to show relationships between two variables.

```{python}
x = np.random.rand(50)
y = np.random.rand(50)

plt.scatter(x, y, color='r', alpha=0.5)
plt.xlabel('Variable X')
plt.ylabel('Variable Y')
plt.title('Scatter Plot')
plt.show()
```

## 3. Bar plots (`plt.bar()`)
Bar plots are suitable for representing categorical data.

```{python}
categories = ['A', 'B', 'C', 'D']
values = [3, 7, 1, 5]

plt.bar(categories, values, color='g')
plt.xlabel('Categories')
plt.ylabel('Value')
plt.title('Bar plot')
plt.show()
```

## 4. Histograms (`plt.hist()`)
Histograms show the distribution of numerical data.

```{python}
data = np.random.randn(1000)
plt.hist(data, bins=30, color='purple', alpha=0.7)
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.title('Histogram')
plt.show()
```

## 5. Box Plots (`plt.boxplot()`)
Box plots help visualize outliers and data distribution.

```{python}
data = [np.random.randn(100) for _ in range(4)]
plt.boxplot(data, labels=['A', 'B', 'C', 'D'])
plt.ylabel('Value')
plt.title('Box Plot')
plt.show()
```

## 6. Heatmaps (`plt.imshow()`)
Heatmaps are useful for displaying 2D data.

```{python}
data = np.random.rand(10, 10)
plt.imshow(data, cmap='coolwarm', interpolation='nearest')
plt.colorbar()
plt.title('Heatmap')
plt.show()
```

## Conclusion
The choice of plot type depends on the nature of the data and the intended representation. In the next chapter, we will explore customizing and adapting plots.
