# Diagrammtypen in Matplotlib

Matplotlib bietet eine Vielzahl von Diagrammtypen, die für unterschiedliche Zwecke geeignet sind. In diesem Kapitel werden die wichtigsten Diagrammtypen vorgestellt und ihre Anwendungsfälle erklärt.

## 1. Liniendiagramme (`plt.plot()`)
Liniendiagramme eignen sich hervorragend zur Darstellung von Trends über Zeit.

```{python}
import matplotlib.pyplot as plt
import numpy as np

t = np.linspace(0, 10, 100)
y = np.sin(t)

plt.plot(t, y, label='sin(t)', color='b')
plt.xlabel('Zeit (s)')
plt.ylabel('Amplitude')
plt.title('Liniendiagramm')
plt.legend()
plt.show()
```

## 2. Streudiagramme (`plt.scatter()`)
Streudiagramme werden verwendet, um Zusammenhänge zwischen zwei Variablen darzustellen.

```{python}
x = np.random.rand(50)
y = np.random.rand(50)

plt.scatter(x, y, color='r', alpha=0.5)
plt.xlabel('Variable X')
plt.ylabel('Variable Y')
plt.title('Streudiagramm')
plt.show()
```

## 3. Balkendiagramme (`plt.bar()`)
Balkendiagramme eignen sich zur Darstellung kategorialer Daten.

```{python}
kategorien = ['A', 'B', 'C', 'D']
werte = [3, 7, 1, 5]

plt.bar(kategorien, werte, color='g')
plt.xlabel('Kategorien')
plt.ylabel('Wert')
plt.title('Balkendiagramm')
plt.show()
```

## 4. Histogramme (`plt.hist()`)
Histogramme zeigen die Verteilung numerischer Daten.

```{python}
daten = np.random.randn(1000)
plt.hist(daten, bins=30, color='purple', alpha=0.7)
plt.xlabel('Wert')
plt.ylabel('Häufigkeit')
plt.title('Histogramm')
plt.show()
```

## 5. Boxplots (`plt.boxplot()`)
Boxplots helfen, Ausreißer und die Verteilung von Daten zu visualisieren.

```{python}
daten = [np.random.randn(100) for _ in range(4)]
plt.boxplot(daten, labels=['A', 'B', 'C', 'D'])
plt.ylabel('Wert')
plt.title('Boxplot')
plt.show()
```

## 6. Heatmaps (`plt.imshow()`)
Heatmaps eignen sich zur Darstellung von 2D-Daten.

```{python}
daten = np.random.rand(10, 10)
plt.imshow(daten, cmap='coolwarm', interpolation='nearest')
plt.colorbar()
plt.title('Heatmap')
plt.show()
```

## Fazit
Die Wahl des richtigen Diagrammtyps hängt von der Art der Daten und der gewünschten Darstellung ab. Im nächsten Kapitel werden wir uns mit der Anpassung und Gestaltung von Plots beschäftigen.
