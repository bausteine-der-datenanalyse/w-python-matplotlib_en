{
  "hash": "80d2813db30bd717430692d810205a47",
  "result": {
    "engine": "jupyter",
    "markdown": "# Best Practices in Matplotlib: Common Mistakes and Improvements\n\nIn this chapter, we demonstrate a poor and an improved example for each common issue encountered when plotting with Matplotlib.\n\n## 1. Missing Labels\n### ❌ Bad Example\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nplt.plot(x, y)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-2-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n### ✅ Improved Example\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nplt.plot(x, y, label='sin(x)', color='b')\nplt.xlabel('Time (s)')\nplt.ylabel('Amplitude')\nplt.title('Sine Curve')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-3-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 2. Poor Color Choice\n### ❌ Bad Example\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nplt.plot(x, y, color='yellow')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-4-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n### ✅ Improved Example\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nplt.plot(x, y, color='darkblue')\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.title('Good Contrast for Better Readability')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-5-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 3. Unreasonable Axis Scaling\n### ❌ Bad Example\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nplt.plot(x, y)\nplt.ylim(0.5, 1)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-6-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n### ✅ Improved Example\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nplt.plot(x, y)\nplt.ylim(-1.2, 1.2)\nplt.xlim(0, 10)\nplt.grid(True)\nplt.title('Reasonable Axis Scaling')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-7-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 4. Overcrowded with Too Many Lines\n### ❌ Bad Example\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nfor i in range(10):\n    plt.plot(x, np.sin(x + i * 0.2))\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-8-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n### ✅ Improved Example\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nplt.plot(x, np.sin(x), label='sin(x)')\nplt.plot(x, np.cos(x), label='cos(x)')\nplt.legend()\nplt.title('Less is More: Reduced Information Density')\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](scientific_plotting_files/figure-pdf/cell-9-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## Conclusion\nGood plots are characterized by clear labels, good readability, and a reasonable amount of information.\n\n",
    "supporting": [
      "scientific_plotting_files/figure-pdf"
    ],
    "filters": []
  }
}