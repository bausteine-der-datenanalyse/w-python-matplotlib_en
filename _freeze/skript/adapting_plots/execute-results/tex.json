{
  "hash": "80fd4b747642fa149a6e6dea5da819b9",
  "result": {
    "engine": "jupyter",
    "markdown": "# Customization and Adapting of Plots in Matplotlib\n\nA well-designed plot improves the readability and comprehension of the data presented. In this chapter, we will explore various ways to customize and adapt plots using Matplotlib.\n\n## 1. Axis Labels and Plot Title\nClear axis and plot titles are essential for understanding a plot.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nt = np.linspace(0, 10, 100)\ny = np.sin(t)\n\nplt.plot(t, y, label='sin(t)', color='b')\nplt.xlabel('Time (s)', fontsize=12)\nplt.ylabel('Amplitude', fontsize=12)\nplt.title('Line Plot with Labels', fontsize=14)\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](adapting_plots_files/figure-pdf/cell-2-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 2. Adjusting Axes\nThe scaling of the axes should be chosen appropriately to best represent the data.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nplt.plot(t, y, label='sin(t)', color='b')\nplt.xlabel('Time (s)')\nplt.ylabel('Amplitude')\nplt.xlim(0, 10)\nplt.ylim(-1.2, 1.2)\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.title('Line Plot with Adjusted Axes')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](adapting_plots_files/figure-pdf/cell-3-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 3. Colors and Line Styles\nColors and line styles help to highlight important information in the plot.\n\n### Common Colors (Default Colors in Matplotlib)\n| Color      | Code  | Description        |\n|------------|-------|--------------------|\n| Blue       | 'b'   | blue               |\n| Green      | 'g'   | green              |\n| Red        | 'r'   | red                |\n| Cyan       | 'c'   | cyan               |\n| Magenta    | 'm'   | magenta            |\n| Yellow     | 'y'   | yellow             |\n| Black      | 'k'   | black              |\n| White      | 'w'   | white              |\n\n### Common Line Styles\n| Line Style     | Code   | Description              |\n|----------------|--------|--------------------------|\n| Solid          | '-'    | default line             |\n| Dashed         | '--'   | long dashes              |\n| Dotted         | ':'    | only dots                |\n| Dash-dot       | '-.'   | alternating dash-dot     |\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nplt.plot(t, np.sin(t), linestyle='-', color='r', label='sin(t)')\nplt.plot(t, np.cos(t), linestyle='--', color='g', label='cos(t)')\nplt.xlabel('Time (s)')\nplt.ylabel('Amplitude')\nplt.title('Customization of Colors and Line Styles')\nplt.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](adapting_plots_files/figure-pdf/cell-4-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 4. Multiple Plots with Subplots\nSometimes it's useful to display multiple plots in a single figure.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nfig, axs = plt.subplots(2, 1, figsize=(6, 6))\naxs[0].plot(t, np.sin(t), color='b')\naxs[0].set_title('Sine Function')\naxs[1].plot(t, np.cos(t), color='r')\naxs[1].set_title('Cosine Function')\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](adapting_plots_files/figure-pdf/cell-5-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## 5. Saving Plots\nPlots can be saved in various formats.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nplt.plot(t, y, label='sin(t)', color='b')\nplt.xlabel('Time (s)')\nplt.ylabel('Amplitude')\nplt.title('Saving a Plot')\nplt.legend()\nplt.savefig('my_plot.png', dpi=300)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](adapting_plots_files/figure-pdf/cell-6-output-1.png){fig-pos='H'}\n:::\n:::\n\n\n## Conclusion\nWith careful customization, scientific plots can be significantly improved. In the next chapter, we will explore advanced techniques such as logarithmic scales and annotations.\n\n",
    "supporting": [
      "adapting_plots_files/figure-pdf"
    ],
    "filters": []
  }
}